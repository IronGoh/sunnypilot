#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_757562583052757246) {
   out_757562583052757246[0] = 0;
   out_757562583052757246[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_757562583052757246[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_757562583052757246[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_757562583052757246[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_757562583052757246[5] = -sin(in_vec[1]);
   out_757562583052757246[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_757562583052757246[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_757562583052757246[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_757562583052757246[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_757562583052757246[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_757562583052757246[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_757562583052757246[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_757562583052757246[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_757562583052757246[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_757562583052757246[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_757562583052757246[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_757562583052757246[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3871806392276481772) {
   out_3871806392276481772[0] = delta_x[0] + nom_x[0];
   out_3871806392276481772[1] = delta_x[1] + nom_x[1];
   out_3871806392276481772[2] = delta_x[2] + nom_x[2];
   out_3871806392276481772[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3871806392276481772[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3871806392276481772[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3871806392276481772[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3871806392276481772[7] = delta_x[6] + nom_x[7];
   out_3871806392276481772[8] = delta_x[7] + nom_x[8];
   out_3871806392276481772[9] = delta_x[8] + nom_x[9];
   out_3871806392276481772[10] = delta_x[9] + nom_x[10];
   out_3871806392276481772[11] = delta_x[10] + nom_x[11];
   out_3871806392276481772[12] = delta_x[11] + nom_x[12];
   out_3871806392276481772[13] = delta_x[12] + nom_x[13];
   out_3871806392276481772[14] = delta_x[13] + nom_x[14];
   out_3871806392276481772[15] = delta_x[14] + nom_x[15];
   out_3871806392276481772[16] = delta_x[15] + nom_x[16];
   out_3871806392276481772[17] = delta_x[16] + nom_x[17];
   out_3871806392276481772[18] = delta_x[17] + nom_x[18];
   out_3871806392276481772[19] = delta_x[18] + nom_x[19];
   out_3871806392276481772[20] = delta_x[19] + nom_x[20];
   out_3871806392276481772[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7967854238640231459) {
   out_7967854238640231459[0] = -nom_x[0] + true_x[0];
   out_7967854238640231459[1] = -nom_x[1] + true_x[1];
   out_7967854238640231459[2] = -nom_x[2] + true_x[2];
   out_7967854238640231459[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7967854238640231459[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7967854238640231459[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7967854238640231459[6] = -nom_x[7] + true_x[7];
   out_7967854238640231459[7] = -nom_x[8] + true_x[8];
   out_7967854238640231459[8] = -nom_x[9] + true_x[9];
   out_7967854238640231459[9] = -nom_x[10] + true_x[10];
   out_7967854238640231459[10] = -nom_x[11] + true_x[11];
   out_7967854238640231459[11] = -nom_x[12] + true_x[12];
   out_7967854238640231459[12] = -nom_x[13] + true_x[13];
   out_7967854238640231459[13] = -nom_x[14] + true_x[14];
   out_7967854238640231459[14] = -nom_x[15] + true_x[15];
   out_7967854238640231459[15] = -nom_x[16] + true_x[16];
   out_7967854238640231459[16] = -nom_x[17] + true_x[17];
   out_7967854238640231459[17] = -nom_x[18] + true_x[18];
   out_7967854238640231459[18] = -nom_x[19] + true_x[19];
   out_7967854238640231459[19] = -nom_x[20] + true_x[20];
   out_7967854238640231459[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8261281829583298016) {
   out_8261281829583298016[0] = 1.0;
   out_8261281829583298016[1] = 0;
   out_8261281829583298016[2] = 0;
   out_8261281829583298016[3] = 0;
   out_8261281829583298016[4] = 0;
   out_8261281829583298016[5] = 0;
   out_8261281829583298016[6] = 0;
   out_8261281829583298016[7] = 0;
   out_8261281829583298016[8] = 0;
   out_8261281829583298016[9] = 0;
   out_8261281829583298016[10] = 0;
   out_8261281829583298016[11] = 0;
   out_8261281829583298016[12] = 0;
   out_8261281829583298016[13] = 0;
   out_8261281829583298016[14] = 0;
   out_8261281829583298016[15] = 0;
   out_8261281829583298016[16] = 0;
   out_8261281829583298016[17] = 0;
   out_8261281829583298016[18] = 0;
   out_8261281829583298016[19] = 0;
   out_8261281829583298016[20] = 0;
   out_8261281829583298016[21] = 0;
   out_8261281829583298016[22] = 1.0;
   out_8261281829583298016[23] = 0;
   out_8261281829583298016[24] = 0;
   out_8261281829583298016[25] = 0;
   out_8261281829583298016[26] = 0;
   out_8261281829583298016[27] = 0;
   out_8261281829583298016[28] = 0;
   out_8261281829583298016[29] = 0;
   out_8261281829583298016[30] = 0;
   out_8261281829583298016[31] = 0;
   out_8261281829583298016[32] = 0;
   out_8261281829583298016[33] = 0;
   out_8261281829583298016[34] = 0;
   out_8261281829583298016[35] = 0;
   out_8261281829583298016[36] = 0;
   out_8261281829583298016[37] = 0;
   out_8261281829583298016[38] = 0;
   out_8261281829583298016[39] = 0;
   out_8261281829583298016[40] = 0;
   out_8261281829583298016[41] = 0;
   out_8261281829583298016[42] = 0;
   out_8261281829583298016[43] = 0;
   out_8261281829583298016[44] = 1.0;
   out_8261281829583298016[45] = 0;
   out_8261281829583298016[46] = 0;
   out_8261281829583298016[47] = 0;
   out_8261281829583298016[48] = 0;
   out_8261281829583298016[49] = 0;
   out_8261281829583298016[50] = 0;
   out_8261281829583298016[51] = 0;
   out_8261281829583298016[52] = 0;
   out_8261281829583298016[53] = 0;
   out_8261281829583298016[54] = 0;
   out_8261281829583298016[55] = 0;
   out_8261281829583298016[56] = 0;
   out_8261281829583298016[57] = 0;
   out_8261281829583298016[58] = 0;
   out_8261281829583298016[59] = 0;
   out_8261281829583298016[60] = 0;
   out_8261281829583298016[61] = 0;
   out_8261281829583298016[62] = 0;
   out_8261281829583298016[63] = 0;
   out_8261281829583298016[64] = 0;
   out_8261281829583298016[65] = 0;
   out_8261281829583298016[66] = -0.5*state[4];
   out_8261281829583298016[67] = -0.5*state[5];
   out_8261281829583298016[68] = -0.5*state[6];
   out_8261281829583298016[69] = 0;
   out_8261281829583298016[70] = 0;
   out_8261281829583298016[71] = 0;
   out_8261281829583298016[72] = 0;
   out_8261281829583298016[73] = 0;
   out_8261281829583298016[74] = 0;
   out_8261281829583298016[75] = 0;
   out_8261281829583298016[76] = 0;
   out_8261281829583298016[77] = 0;
   out_8261281829583298016[78] = 0;
   out_8261281829583298016[79] = 0;
   out_8261281829583298016[80] = 0;
   out_8261281829583298016[81] = 0;
   out_8261281829583298016[82] = 0;
   out_8261281829583298016[83] = 0;
   out_8261281829583298016[84] = 0;
   out_8261281829583298016[85] = 0;
   out_8261281829583298016[86] = 0;
   out_8261281829583298016[87] = 0.5*state[3];
   out_8261281829583298016[88] = 0.5*state[6];
   out_8261281829583298016[89] = -0.5*state[5];
   out_8261281829583298016[90] = 0;
   out_8261281829583298016[91] = 0;
   out_8261281829583298016[92] = 0;
   out_8261281829583298016[93] = 0;
   out_8261281829583298016[94] = 0;
   out_8261281829583298016[95] = 0;
   out_8261281829583298016[96] = 0;
   out_8261281829583298016[97] = 0;
   out_8261281829583298016[98] = 0;
   out_8261281829583298016[99] = 0;
   out_8261281829583298016[100] = 0;
   out_8261281829583298016[101] = 0;
   out_8261281829583298016[102] = 0;
   out_8261281829583298016[103] = 0;
   out_8261281829583298016[104] = 0;
   out_8261281829583298016[105] = 0;
   out_8261281829583298016[106] = 0;
   out_8261281829583298016[107] = 0;
   out_8261281829583298016[108] = -0.5*state[6];
   out_8261281829583298016[109] = 0.5*state[3];
   out_8261281829583298016[110] = 0.5*state[4];
   out_8261281829583298016[111] = 0;
   out_8261281829583298016[112] = 0;
   out_8261281829583298016[113] = 0;
   out_8261281829583298016[114] = 0;
   out_8261281829583298016[115] = 0;
   out_8261281829583298016[116] = 0;
   out_8261281829583298016[117] = 0;
   out_8261281829583298016[118] = 0;
   out_8261281829583298016[119] = 0;
   out_8261281829583298016[120] = 0;
   out_8261281829583298016[121] = 0;
   out_8261281829583298016[122] = 0;
   out_8261281829583298016[123] = 0;
   out_8261281829583298016[124] = 0;
   out_8261281829583298016[125] = 0;
   out_8261281829583298016[126] = 0;
   out_8261281829583298016[127] = 0;
   out_8261281829583298016[128] = 0;
   out_8261281829583298016[129] = 0.5*state[5];
   out_8261281829583298016[130] = -0.5*state[4];
   out_8261281829583298016[131] = 0.5*state[3];
   out_8261281829583298016[132] = 0;
   out_8261281829583298016[133] = 0;
   out_8261281829583298016[134] = 0;
   out_8261281829583298016[135] = 0;
   out_8261281829583298016[136] = 0;
   out_8261281829583298016[137] = 0;
   out_8261281829583298016[138] = 0;
   out_8261281829583298016[139] = 0;
   out_8261281829583298016[140] = 0;
   out_8261281829583298016[141] = 0;
   out_8261281829583298016[142] = 0;
   out_8261281829583298016[143] = 0;
   out_8261281829583298016[144] = 0;
   out_8261281829583298016[145] = 0;
   out_8261281829583298016[146] = 0;
   out_8261281829583298016[147] = 0;
   out_8261281829583298016[148] = 0;
   out_8261281829583298016[149] = 0;
   out_8261281829583298016[150] = 0;
   out_8261281829583298016[151] = 0;
   out_8261281829583298016[152] = 0;
   out_8261281829583298016[153] = 1.0;
   out_8261281829583298016[154] = 0;
   out_8261281829583298016[155] = 0;
   out_8261281829583298016[156] = 0;
   out_8261281829583298016[157] = 0;
   out_8261281829583298016[158] = 0;
   out_8261281829583298016[159] = 0;
   out_8261281829583298016[160] = 0;
   out_8261281829583298016[161] = 0;
   out_8261281829583298016[162] = 0;
   out_8261281829583298016[163] = 0;
   out_8261281829583298016[164] = 0;
   out_8261281829583298016[165] = 0;
   out_8261281829583298016[166] = 0;
   out_8261281829583298016[167] = 0;
   out_8261281829583298016[168] = 0;
   out_8261281829583298016[169] = 0;
   out_8261281829583298016[170] = 0;
   out_8261281829583298016[171] = 0;
   out_8261281829583298016[172] = 0;
   out_8261281829583298016[173] = 0;
   out_8261281829583298016[174] = 0;
   out_8261281829583298016[175] = 1.0;
   out_8261281829583298016[176] = 0;
   out_8261281829583298016[177] = 0;
   out_8261281829583298016[178] = 0;
   out_8261281829583298016[179] = 0;
   out_8261281829583298016[180] = 0;
   out_8261281829583298016[181] = 0;
   out_8261281829583298016[182] = 0;
   out_8261281829583298016[183] = 0;
   out_8261281829583298016[184] = 0;
   out_8261281829583298016[185] = 0;
   out_8261281829583298016[186] = 0;
   out_8261281829583298016[187] = 0;
   out_8261281829583298016[188] = 0;
   out_8261281829583298016[189] = 0;
   out_8261281829583298016[190] = 0;
   out_8261281829583298016[191] = 0;
   out_8261281829583298016[192] = 0;
   out_8261281829583298016[193] = 0;
   out_8261281829583298016[194] = 0;
   out_8261281829583298016[195] = 0;
   out_8261281829583298016[196] = 0;
   out_8261281829583298016[197] = 1.0;
   out_8261281829583298016[198] = 0;
   out_8261281829583298016[199] = 0;
   out_8261281829583298016[200] = 0;
   out_8261281829583298016[201] = 0;
   out_8261281829583298016[202] = 0;
   out_8261281829583298016[203] = 0;
   out_8261281829583298016[204] = 0;
   out_8261281829583298016[205] = 0;
   out_8261281829583298016[206] = 0;
   out_8261281829583298016[207] = 0;
   out_8261281829583298016[208] = 0;
   out_8261281829583298016[209] = 0;
   out_8261281829583298016[210] = 0;
   out_8261281829583298016[211] = 0;
   out_8261281829583298016[212] = 0;
   out_8261281829583298016[213] = 0;
   out_8261281829583298016[214] = 0;
   out_8261281829583298016[215] = 0;
   out_8261281829583298016[216] = 0;
   out_8261281829583298016[217] = 0;
   out_8261281829583298016[218] = 0;
   out_8261281829583298016[219] = 1.0;
   out_8261281829583298016[220] = 0;
   out_8261281829583298016[221] = 0;
   out_8261281829583298016[222] = 0;
   out_8261281829583298016[223] = 0;
   out_8261281829583298016[224] = 0;
   out_8261281829583298016[225] = 0;
   out_8261281829583298016[226] = 0;
   out_8261281829583298016[227] = 0;
   out_8261281829583298016[228] = 0;
   out_8261281829583298016[229] = 0;
   out_8261281829583298016[230] = 0;
   out_8261281829583298016[231] = 0;
   out_8261281829583298016[232] = 0;
   out_8261281829583298016[233] = 0;
   out_8261281829583298016[234] = 0;
   out_8261281829583298016[235] = 0;
   out_8261281829583298016[236] = 0;
   out_8261281829583298016[237] = 0;
   out_8261281829583298016[238] = 0;
   out_8261281829583298016[239] = 0;
   out_8261281829583298016[240] = 0;
   out_8261281829583298016[241] = 1.0;
   out_8261281829583298016[242] = 0;
   out_8261281829583298016[243] = 0;
   out_8261281829583298016[244] = 0;
   out_8261281829583298016[245] = 0;
   out_8261281829583298016[246] = 0;
   out_8261281829583298016[247] = 0;
   out_8261281829583298016[248] = 0;
   out_8261281829583298016[249] = 0;
   out_8261281829583298016[250] = 0;
   out_8261281829583298016[251] = 0;
   out_8261281829583298016[252] = 0;
   out_8261281829583298016[253] = 0;
   out_8261281829583298016[254] = 0;
   out_8261281829583298016[255] = 0;
   out_8261281829583298016[256] = 0;
   out_8261281829583298016[257] = 0;
   out_8261281829583298016[258] = 0;
   out_8261281829583298016[259] = 0;
   out_8261281829583298016[260] = 0;
   out_8261281829583298016[261] = 0;
   out_8261281829583298016[262] = 0;
   out_8261281829583298016[263] = 1.0;
   out_8261281829583298016[264] = 0;
   out_8261281829583298016[265] = 0;
   out_8261281829583298016[266] = 0;
   out_8261281829583298016[267] = 0;
   out_8261281829583298016[268] = 0;
   out_8261281829583298016[269] = 0;
   out_8261281829583298016[270] = 0;
   out_8261281829583298016[271] = 0;
   out_8261281829583298016[272] = 0;
   out_8261281829583298016[273] = 0;
   out_8261281829583298016[274] = 0;
   out_8261281829583298016[275] = 0;
   out_8261281829583298016[276] = 0;
   out_8261281829583298016[277] = 0;
   out_8261281829583298016[278] = 0;
   out_8261281829583298016[279] = 0;
   out_8261281829583298016[280] = 0;
   out_8261281829583298016[281] = 0;
   out_8261281829583298016[282] = 0;
   out_8261281829583298016[283] = 0;
   out_8261281829583298016[284] = 0;
   out_8261281829583298016[285] = 1.0;
   out_8261281829583298016[286] = 0;
   out_8261281829583298016[287] = 0;
   out_8261281829583298016[288] = 0;
   out_8261281829583298016[289] = 0;
   out_8261281829583298016[290] = 0;
   out_8261281829583298016[291] = 0;
   out_8261281829583298016[292] = 0;
   out_8261281829583298016[293] = 0;
   out_8261281829583298016[294] = 0;
   out_8261281829583298016[295] = 0;
   out_8261281829583298016[296] = 0;
   out_8261281829583298016[297] = 0;
   out_8261281829583298016[298] = 0;
   out_8261281829583298016[299] = 0;
   out_8261281829583298016[300] = 0;
   out_8261281829583298016[301] = 0;
   out_8261281829583298016[302] = 0;
   out_8261281829583298016[303] = 0;
   out_8261281829583298016[304] = 0;
   out_8261281829583298016[305] = 0;
   out_8261281829583298016[306] = 0;
   out_8261281829583298016[307] = 1.0;
   out_8261281829583298016[308] = 0;
   out_8261281829583298016[309] = 0;
   out_8261281829583298016[310] = 0;
   out_8261281829583298016[311] = 0;
   out_8261281829583298016[312] = 0;
   out_8261281829583298016[313] = 0;
   out_8261281829583298016[314] = 0;
   out_8261281829583298016[315] = 0;
   out_8261281829583298016[316] = 0;
   out_8261281829583298016[317] = 0;
   out_8261281829583298016[318] = 0;
   out_8261281829583298016[319] = 0;
   out_8261281829583298016[320] = 0;
   out_8261281829583298016[321] = 0;
   out_8261281829583298016[322] = 0;
   out_8261281829583298016[323] = 0;
   out_8261281829583298016[324] = 0;
   out_8261281829583298016[325] = 0;
   out_8261281829583298016[326] = 0;
   out_8261281829583298016[327] = 0;
   out_8261281829583298016[328] = 0;
   out_8261281829583298016[329] = 1.0;
   out_8261281829583298016[330] = 0;
   out_8261281829583298016[331] = 0;
   out_8261281829583298016[332] = 0;
   out_8261281829583298016[333] = 0;
   out_8261281829583298016[334] = 0;
   out_8261281829583298016[335] = 0;
   out_8261281829583298016[336] = 0;
   out_8261281829583298016[337] = 0;
   out_8261281829583298016[338] = 0;
   out_8261281829583298016[339] = 0;
   out_8261281829583298016[340] = 0;
   out_8261281829583298016[341] = 0;
   out_8261281829583298016[342] = 0;
   out_8261281829583298016[343] = 0;
   out_8261281829583298016[344] = 0;
   out_8261281829583298016[345] = 0;
   out_8261281829583298016[346] = 0;
   out_8261281829583298016[347] = 0;
   out_8261281829583298016[348] = 0;
   out_8261281829583298016[349] = 0;
   out_8261281829583298016[350] = 0;
   out_8261281829583298016[351] = 1.0;
   out_8261281829583298016[352] = 0;
   out_8261281829583298016[353] = 0;
   out_8261281829583298016[354] = 0;
   out_8261281829583298016[355] = 0;
   out_8261281829583298016[356] = 0;
   out_8261281829583298016[357] = 0;
   out_8261281829583298016[358] = 0;
   out_8261281829583298016[359] = 0;
   out_8261281829583298016[360] = 0;
   out_8261281829583298016[361] = 0;
   out_8261281829583298016[362] = 0;
   out_8261281829583298016[363] = 0;
   out_8261281829583298016[364] = 0;
   out_8261281829583298016[365] = 0;
   out_8261281829583298016[366] = 0;
   out_8261281829583298016[367] = 0;
   out_8261281829583298016[368] = 0;
   out_8261281829583298016[369] = 0;
   out_8261281829583298016[370] = 0;
   out_8261281829583298016[371] = 0;
   out_8261281829583298016[372] = 0;
   out_8261281829583298016[373] = 1.0;
   out_8261281829583298016[374] = 0;
   out_8261281829583298016[375] = 0;
   out_8261281829583298016[376] = 0;
   out_8261281829583298016[377] = 0;
   out_8261281829583298016[378] = 0;
   out_8261281829583298016[379] = 0;
   out_8261281829583298016[380] = 0;
   out_8261281829583298016[381] = 0;
   out_8261281829583298016[382] = 0;
   out_8261281829583298016[383] = 0;
   out_8261281829583298016[384] = 0;
   out_8261281829583298016[385] = 0;
   out_8261281829583298016[386] = 0;
   out_8261281829583298016[387] = 0;
   out_8261281829583298016[388] = 0;
   out_8261281829583298016[389] = 0;
   out_8261281829583298016[390] = 0;
   out_8261281829583298016[391] = 0;
   out_8261281829583298016[392] = 0;
   out_8261281829583298016[393] = 0;
   out_8261281829583298016[394] = 0;
   out_8261281829583298016[395] = 1.0;
   out_8261281829583298016[396] = 0;
   out_8261281829583298016[397] = 0;
   out_8261281829583298016[398] = 0;
   out_8261281829583298016[399] = 0;
   out_8261281829583298016[400] = 0;
   out_8261281829583298016[401] = 0;
   out_8261281829583298016[402] = 0;
   out_8261281829583298016[403] = 0;
   out_8261281829583298016[404] = 0;
   out_8261281829583298016[405] = 0;
   out_8261281829583298016[406] = 0;
   out_8261281829583298016[407] = 0;
   out_8261281829583298016[408] = 0;
   out_8261281829583298016[409] = 0;
   out_8261281829583298016[410] = 0;
   out_8261281829583298016[411] = 0;
   out_8261281829583298016[412] = 0;
   out_8261281829583298016[413] = 0;
   out_8261281829583298016[414] = 0;
   out_8261281829583298016[415] = 0;
   out_8261281829583298016[416] = 0;
   out_8261281829583298016[417] = 1.0;
   out_8261281829583298016[418] = 0;
   out_8261281829583298016[419] = 0;
   out_8261281829583298016[420] = 0;
   out_8261281829583298016[421] = 0;
   out_8261281829583298016[422] = 0;
   out_8261281829583298016[423] = 0;
   out_8261281829583298016[424] = 0;
   out_8261281829583298016[425] = 0;
   out_8261281829583298016[426] = 0;
   out_8261281829583298016[427] = 0;
   out_8261281829583298016[428] = 0;
   out_8261281829583298016[429] = 0;
   out_8261281829583298016[430] = 0;
   out_8261281829583298016[431] = 0;
   out_8261281829583298016[432] = 0;
   out_8261281829583298016[433] = 0;
   out_8261281829583298016[434] = 0;
   out_8261281829583298016[435] = 0;
   out_8261281829583298016[436] = 0;
   out_8261281829583298016[437] = 0;
   out_8261281829583298016[438] = 0;
   out_8261281829583298016[439] = 1.0;
   out_8261281829583298016[440] = 0;
   out_8261281829583298016[441] = 0;
   out_8261281829583298016[442] = 0;
   out_8261281829583298016[443] = 0;
   out_8261281829583298016[444] = 0;
   out_8261281829583298016[445] = 0;
   out_8261281829583298016[446] = 0;
   out_8261281829583298016[447] = 0;
   out_8261281829583298016[448] = 0;
   out_8261281829583298016[449] = 0;
   out_8261281829583298016[450] = 0;
   out_8261281829583298016[451] = 0;
   out_8261281829583298016[452] = 0;
   out_8261281829583298016[453] = 0;
   out_8261281829583298016[454] = 0;
   out_8261281829583298016[455] = 0;
   out_8261281829583298016[456] = 0;
   out_8261281829583298016[457] = 0;
   out_8261281829583298016[458] = 0;
   out_8261281829583298016[459] = 0;
   out_8261281829583298016[460] = 0;
   out_8261281829583298016[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4896127263541326294) {
   out_4896127263541326294[0] = dt*state[7] + state[0];
   out_4896127263541326294[1] = dt*state[8] + state[1];
   out_4896127263541326294[2] = dt*state[9] + state[2];
   out_4896127263541326294[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4896127263541326294[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4896127263541326294[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4896127263541326294[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4896127263541326294[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4896127263541326294[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4896127263541326294[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4896127263541326294[10] = state[10];
   out_4896127263541326294[11] = state[11];
   out_4896127263541326294[12] = state[12];
   out_4896127263541326294[13] = state[13];
   out_4896127263541326294[14] = state[14];
   out_4896127263541326294[15] = state[15];
   out_4896127263541326294[16] = state[16];
   out_4896127263541326294[17] = state[17];
   out_4896127263541326294[18] = state[18];
   out_4896127263541326294[19] = state[19];
   out_4896127263541326294[20] = state[20];
   out_4896127263541326294[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4168231684540016827) {
   out_4168231684540016827[0] = 1;
   out_4168231684540016827[1] = 0;
   out_4168231684540016827[2] = 0;
   out_4168231684540016827[3] = 0;
   out_4168231684540016827[4] = 0;
   out_4168231684540016827[5] = 0;
   out_4168231684540016827[6] = dt;
   out_4168231684540016827[7] = 0;
   out_4168231684540016827[8] = 0;
   out_4168231684540016827[9] = 0;
   out_4168231684540016827[10] = 0;
   out_4168231684540016827[11] = 0;
   out_4168231684540016827[12] = 0;
   out_4168231684540016827[13] = 0;
   out_4168231684540016827[14] = 0;
   out_4168231684540016827[15] = 0;
   out_4168231684540016827[16] = 0;
   out_4168231684540016827[17] = 0;
   out_4168231684540016827[18] = 0;
   out_4168231684540016827[19] = 0;
   out_4168231684540016827[20] = 0;
   out_4168231684540016827[21] = 0;
   out_4168231684540016827[22] = 1;
   out_4168231684540016827[23] = 0;
   out_4168231684540016827[24] = 0;
   out_4168231684540016827[25] = 0;
   out_4168231684540016827[26] = 0;
   out_4168231684540016827[27] = 0;
   out_4168231684540016827[28] = dt;
   out_4168231684540016827[29] = 0;
   out_4168231684540016827[30] = 0;
   out_4168231684540016827[31] = 0;
   out_4168231684540016827[32] = 0;
   out_4168231684540016827[33] = 0;
   out_4168231684540016827[34] = 0;
   out_4168231684540016827[35] = 0;
   out_4168231684540016827[36] = 0;
   out_4168231684540016827[37] = 0;
   out_4168231684540016827[38] = 0;
   out_4168231684540016827[39] = 0;
   out_4168231684540016827[40] = 0;
   out_4168231684540016827[41] = 0;
   out_4168231684540016827[42] = 0;
   out_4168231684540016827[43] = 0;
   out_4168231684540016827[44] = 1;
   out_4168231684540016827[45] = 0;
   out_4168231684540016827[46] = 0;
   out_4168231684540016827[47] = 0;
   out_4168231684540016827[48] = 0;
   out_4168231684540016827[49] = 0;
   out_4168231684540016827[50] = dt;
   out_4168231684540016827[51] = 0;
   out_4168231684540016827[52] = 0;
   out_4168231684540016827[53] = 0;
   out_4168231684540016827[54] = 0;
   out_4168231684540016827[55] = 0;
   out_4168231684540016827[56] = 0;
   out_4168231684540016827[57] = 0;
   out_4168231684540016827[58] = 0;
   out_4168231684540016827[59] = 0;
   out_4168231684540016827[60] = 0;
   out_4168231684540016827[61] = 0;
   out_4168231684540016827[62] = 0;
   out_4168231684540016827[63] = 0;
   out_4168231684540016827[64] = 0;
   out_4168231684540016827[65] = 0;
   out_4168231684540016827[66] = 1;
   out_4168231684540016827[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4168231684540016827[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4168231684540016827[69] = 0;
   out_4168231684540016827[70] = 0;
   out_4168231684540016827[71] = 0;
   out_4168231684540016827[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4168231684540016827[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4168231684540016827[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4168231684540016827[75] = 0;
   out_4168231684540016827[76] = 0;
   out_4168231684540016827[77] = 0;
   out_4168231684540016827[78] = 0;
   out_4168231684540016827[79] = 0;
   out_4168231684540016827[80] = 0;
   out_4168231684540016827[81] = 0;
   out_4168231684540016827[82] = 0;
   out_4168231684540016827[83] = 0;
   out_4168231684540016827[84] = 0;
   out_4168231684540016827[85] = 0;
   out_4168231684540016827[86] = 0;
   out_4168231684540016827[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4168231684540016827[88] = 1;
   out_4168231684540016827[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4168231684540016827[90] = 0;
   out_4168231684540016827[91] = 0;
   out_4168231684540016827[92] = 0;
   out_4168231684540016827[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4168231684540016827[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4168231684540016827[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4168231684540016827[96] = 0;
   out_4168231684540016827[97] = 0;
   out_4168231684540016827[98] = 0;
   out_4168231684540016827[99] = 0;
   out_4168231684540016827[100] = 0;
   out_4168231684540016827[101] = 0;
   out_4168231684540016827[102] = 0;
   out_4168231684540016827[103] = 0;
   out_4168231684540016827[104] = 0;
   out_4168231684540016827[105] = 0;
   out_4168231684540016827[106] = 0;
   out_4168231684540016827[107] = 0;
   out_4168231684540016827[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4168231684540016827[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4168231684540016827[110] = 1;
   out_4168231684540016827[111] = 0;
   out_4168231684540016827[112] = 0;
   out_4168231684540016827[113] = 0;
   out_4168231684540016827[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4168231684540016827[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4168231684540016827[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4168231684540016827[117] = 0;
   out_4168231684540016827[118] = 0;
   out_4168231684540016827[119] = 0;
   out_4168231684540016827[120] = 0;
   out_4168231684540016827[121] = 0;
   out_4168231684540016827[122] = 0;
   out_4168231684540016827[123] = 0;
   out_4168231684540016827[124] = 0;
   out_4168231684540016827[125] = 0;
   out_4168231684540016827[126] = 0;
   out_4168231684540016827[127] = 0;
   out_4168231684540016827[128] = 0;
   out_4168231684540016827[129] = 0;
   out_4168231684540016827[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4168231684540016827[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4168231684540016827[132] = 1;
   out_4168231684540016827[133] = 0;
   out_4168231684540016827[134] = 0;
   out_4168231684540016827[135] = 0;
   out_4168231684540016827[136] = 0;
   out_4168231684540016827[137] = 0;
   out_4168231684540016827[138] = 0;
   out_4168231684540016827[139] = 0;
   out_4168231684540016827[140] = 0;
   out_4168231684540016827[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4168231684540016827[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4168231684540016827[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4168231684540016827[144] = 0;
   out_4168231684540016827[145] = 0;
   out_4168231684540016827[146] = 0;
   out_4168231684540016827[147] = 0;
   out_4168231684540016827[148] = 0;
   out_4168231684540016827[149] = 0;
   out_4168231684540016827[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4168231684540016827[151] = 0;
   out_4168231684540016827[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4168231684540016827[153] = 0;
   out_4168231684540016827[154] = 1;
   out_4168231684540016827[155] = 0;
   out_4168231684540016827[156] = 0;
   out_4168231684540016827[157] = 0;
   out_4168231684540016827[158] = 0;
   out_4168231684540016827[159] = 0;
   out_4168231684540016827[160] = 0;
   out_4168231684540016827[161] = 0;
   out_4168231684540016827[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4168231684540016827[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4168231684540016827[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4168231684540016827[165] = 0;
   out_4168231684540016827[166] = 0;
   out_4168231684540016827[167] = 0;
   out_4168231684540016827[168] = 0;
   out_4168231684540016827[169] = 0;
   out_4168231684540016827[170] = 0;
   out_4168231684540016827[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4168231684540016827[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4168231684540016827[173] = 0;
   out_4168231684540016827[174] = 0;
   out_4168231684540016827[175] = 0;
   out_4168231684540016827[176] = 1;
   out_4168231684540016827[177] = 0;
   out_4168231684540016827[178] = 0;
   out_4168231684540016827[179] = 0;
   out_4168231684540016827[180] = 0;
   out_4168231684540016827[181] = 0;
   out_4168231684540016827[182] = 0;
   out_4168231684540016827[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4168231684540016827[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4168231684540016827[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4168231684540016827[186] = 0;
   out_4168231684540016827[187] = 0;
   out_4168231684540016827[188] = 0;
   out_4168231684540016827[189] = 0;
   out_4168231684540016827[190] = 0;
   out_4168231684540016827[191] = 0;
   out_4168231684540016827[192] = 0;
   out_4168231684540016827[193] = 0;
   out_4168231684540016827[194] = 0;
   out_4168231684540016827[195] = 0;
   out_4168231684540016827[196] = 0;
   out_4168231684540016827[197] = 0;
   out_4168231684540016827[198] = 1;
   out_4168231684540016827[199] = 0;
   out_4168231684540016827[200] = 0;
   out_4168231684540016827[201] = 0;
   out_4168231684540016827[202] = 0;
   out_4168231684540016827[203] = 0;
   out_4168231684540016827[204] = 0;
   out_4168231684540016827[205] = 0;
   out_4168231684540016827[206] = 0;
   out_4168231684540016827[207] = 0;
   out_4168231684540016827[208] = 0;
   out_4168231684540016827[209] = 0;
   out_4168231684540016827[210] = 0;
   out_4168231684540016827[211] = 0;
   out_4168231684540016827[212] = 0;
   out_4168231684540016827[213] = 0;
   out_4168231684540016827[214] = 0;
   out_4168231684540016827[215] = 0;
   out_4168231684540016827[216] = 0;
   out_4168231684540016827[217] = 0;
   out_4168231684540016827[218] = 0;
   out_4168231684540016827[219] = 0;
   out_4168231684540016827[220] = 1;
   out_4168231684540016827[221] = 0;
   out_4168231684540016827[222] = 0;
   out_4168231684540016827[223] = 0;
   out_4168231684540016827[224] = 0;
   out_4168231684540016827[225] = 0;
   out_4168231684540016827[226] = 0;
   out_4168231684540016827[227] = 0;
   out_4168231684540016827[228] = 0;
   out_4168231684540016827[229] = 0;
   out_4168231684540016827[230] = 0;
   out_4168231684540016827[231] = 0;
   out_4168231684540016827[232] = 0;
   out_4168231684540016827[233] = 0;
   out_4168231684540016827[234] = 0;
   out_4168231684540016827[235] = 0;
   out_4168231684540016827[236] = 0;
   out_4168231684540016827[237] = 0;
   out_4168231684540016827[238] = 0;
   out_4168231684540016827[239] = 0;
   out_4168231684540016827[240] = 0;
   out_4168231684540016827[241] = 0;
   out_4168231684540016827[242] = 1;
   out_4168231684540016827[243] = 0;
   out_4168231684540016827[244] = 0;
   out_4168231684540016827[245] = 0;
   out_4168231684540016827[246] = 0;
   out_4168231684540016827[247] = 0;
   out_4168231684540016827[248] = 0;
   out_4168231684540016827[249] = 0;
   out_4168231684540016827[250] = 0;
   out_4168231684540016827[251] = 0;
   out_4168231684540016827[252] = 0;
   out_4168231684540016827[253] = 0;
   out_4168231684540016827[254] = 0;
   out_4168231684540016827[255] = 0;
   out_4168231684540016827[256] = 0;
   out_4168231684540016827[257] = 0;
   out_4168231684540016827[258] = 0;
   out_4168231684540016827[259] = 0;
   out_4168231684540016827[260] = 0;
   out_4168231684540016827[261] = 0;
   out_4168231684540016827[262] = 0;
   out_4168231684540016827[263] = 0;
   out_4168231684540016827[264] = 1;
   out_4168231684540016827[265] = 0;
   out_4168231684540016827[266] = 0;
   out_4168231684540016827[267] = 0;
   out_4168231684540016827[268] = 0;
   out_4168231684540016827[269] = 0;
   out_4168231684540016827[270] = 0;
   out_4168231684540016827[271] = 0;
   out_4168231684540016827[272] = 0;
   out_4168231684540016827[273] = 0;
   out_4168231684540016827[274] = 0;
   out_4168231684540016827[275] = 0;
   out_4168231684540016827[276] = 0;
   out_4168231684540016827[277] = 0;
   out_4168231684540016827[278] = 0;
   out_4168231684540016827[279] = 0;
   out_4168231684540016827[280] = 0;
   out_4168231684540016827[281] = 0;
   out_4168231684540016827[282] = 0;
   out_4168231684540016827[283] = 0;
   out_4168231684540016827[284] = 0;
   out_4168231684540016827[285] = 0;
   out_4168231684540016827[286] = 1;
   out_4168231684540016827[287] = 0;
   out_4168231684540016827[288] = 0;
   out_4168231684540016827[289] = 0;
   out_4168231684540016827[290] = 0;
   out_4168231684540016827[291] = 0;
   out_4168231684540016827[292] = 0;
   out_4168231684540016827[293] = 0;
   out_4168231684540016827[294] = 0;
   out_4168231684540016827[295] = 0;
   out_4168231684540016827[296] = 0;
   out_4168231684540016827[297] = 0;
   out_4168231684540016827[298] = 0;
   out_4168231684540016827[299] = 0;
   out_4168231684540016827[300] = 0;
   out_4168231684540016827[301] = 0;
   out_4168231684540016827[302] = 0;
   out_4168231684540016827[303] = 0;
   out_4168231684540016827[304] = 0;
   out_4168231684540016827[305] = 0;
   out_4168231684540016827[306] = 0;
   out_4168231684540016827[307] = 0;
   out_4168231684540016827[308] = 1;
   out_4168231684540016827[309] = 0;
   out_4168231684540016827[310] = 0;
   out_4168231684540016827[311] = 0;
   out_4168231684540016827[312] = 0;
   out_4168231684540016827[313] = 0;
   out_4168231684540016827[314] = 0;
   out_4168231684540016827[315] = 0;
   out_4168231684540016827[316] = 0;
   out_4168231684540016827[317] = 0;
   out_4168231684540016827[318] = 0;
   out_4168231684540016827[319] = 0;
   out_4168231684540016827[320] = 0;
   out_4168231684540016827[321] = 0;
   out_4168231684540016827[322] = 0;
   out_4168231684540016827[323] = 0;
   out_4168231684540016827[324] = 0;
   out_4168231684540016827[325] = 0;
   out_4168231684540016827[326] = 0;
   out_4168231684540016827[327] = 0;
   out_4168231684540016827[328] = 0;
   out_4168231684540016827[329] = 0;
   out_4168231684540016827[330] = 1;
   out_4168231684540016827[331] = 0;
   out_4168231684540016827[332] = 0;
   out_4168231684540016827[333] = 0;
   out_4168231684540016827[334] = 0;
   out_4168231684540016827[335] = 0;
   out_4168231684540016827[336] = 0;
   out_4168231684540016827[337] = 0;
   out_4168231684540016827[338] = 0;
   out_4168231684540016827[339] = 0;
   out_4168231684540016827[340] = 0;
   out_4168231684540016827[341] = 0;
   out_4168231684540016827[342] = 0;
   out_4168231684540016827[343] = 0;
   out_4168231684540016827[344] = 0;
   out_4168231684540016827[345] = 0;
   out_4168231684540016827[346] = 0;
   out_4168231684540016827[347] = 0;
   out_4168231684540016827[348] = 0;
   out_4168231684540016827[349] = 0;
   out_4168231684540016827[350] = 0;
   out_4168231684540016827[351] = 0;
   out_4168231684540016827[352] = 1;
   out_4168231684540016827[353] = 0;
   out_4168231684540016827[354] = 0;
   out_4168231684540016827[355] = 0;
   out_4168231684540016827[356] = 0;
   out_4168231684540016827[357] = 0;
   out_4168231684540016827[358] = 0;
   out_4168231684540016827[359] = 0;
   out_4168231684540016827[360] = 0;
   out_4168231684540016827[361] = 0;
   out_4168231684540016827[362] = 0;
   out_4168231684540016827[363] = 0;
   out_4168231684540016827[364] = 0;
   out_4168231684540016827[365] = 0;
   out_4168231684540016827[366] = 0;
   out_4168231684540016827[367] = 0;
   out_4168231684540016827[368] = 0;
   out_4168231684540016827[369] = 0;
   out_4168231684540016827[370] = 0;
   out_4168231684540016827[371] = 0;
   out_4168231684540016827[372] = 0;
   out_4168231684540016827[373] = 0;
   out_4168231684540016827[374] = 1;
   out_4168231684540016827[375] = 0;
   out_4168231684540016827[376] = 0;
   out_4168231684540016827[377] = 0;
   out_4168231684540016827[378] = 0;
   out_4168231684540016827[379] = 0;
   out_4168231684540016827[380] = 0;
   out_4168231684540016827[381] = 0;
   out_4168231684540016827[382] = 0;
   out_4168231684540016827[383] = 0;
   out_4168231684540016827[384] = 0;
   out_4168231684540016827[385] = 0;
   out_4168231684540016827[386] = 0;
   out_4168231684540016827[387] = 0;
   out_4168231684540016827[388] = 0;
   out_4168231684540016827[389] = 0;
   out_4168231684540016827[390] = 0;
   out_4168231684540016827[391] = 0;
   out_4168231684540016827[392] = 0;
   out_4168231684540016827[393] = 0;
   out_4168231684540016827[394] = 0;
   out_4168231684540016827[395] = 0;
   out_4168231684540016827[396] = 1;
   out_4168231684540016827[397] = 0;
   out_4168231684540016827[398] = 0;
   out_4168231684540016827[399] = 0;
   out_4168231684540016827[400] = 0;
   out_4168231684540016827[401] = 0;
   out_4168231684540016827[402] = 0;
   out_4168231684540016827[403] = 0;
   out_4168231684540016827[404] = 0;
   out_4168231684540016827[405] = 0;
   out_4168231684540016827[406] = 0;
   out_4168231684540016827[407] = 0;
   out_4168231684540016827[408] = 0;
   out_4168231684540016827[409] = 0;
   out_4168231684540016827[410] = 0;
   out_4168231684540016827[411] = 0;
   out_4168231684540016827[412] = 0;
   out_4168231684540016827[413] = 0;
   out_4168231684540016827[414] = 0;
   out_4168231684540016827[415] = 0;
   out_4168231684540016827[416] = 0;
   out_4168231684540016827[417] = 0;
   out_4168231684540016827[418] = 1;
   out_4168231684540016827[419] = 0;
   out_4168231684540016827[420] = 0;
   out_4168231684540016827[421] = 0;
   out_4168231684540016827[422] = 0;
   out_4168231684540016827[423] = 0;
   out_4168231684540016827[424] = 0;
   out_4168231684540016827[425] = 0;
   out_4168231684540016827[426] = 0;
   out_4168231684540016827[427] = 0;
   out_4168231684540016827[428] = 0;
   out_4168231684540016827[429] = 0;
   out_4168231684540016827[430] = 0;
   out_4168231684540016827[431] = 0;
   out_4168231684540016827[432] = 0;
   out_4168231684540016827[433] = 0;
   out_4168231684540016827[434] = 0;
   out_4168231684540016827[435] = 0;
   out_4168231684540016827[436] = 0;
   out_4168231684540016827[437] = 0;
   out_4168231684540016827[438] = 0;
   out_4168231684540016827[439] = 0;
   out_4168231684540016827[440] = 1;
}
void h_4(double *state, double *unused, double *out_4991721715502618263) {
   out_4991721715502618263[0] = state[10] + state[13];
   out_4991721715502618263[1] = state[11] + state[14];
   out_4991721715502618263[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1060307404855628995) {
   out_1060307404855628995[0] = 0;
   out_1060307404855628995[1] = 0;
   out_1060307404855628995[2] = 0;
   out_1060307404855628995[3] = 0;
   out_1060307404855628995[4] = 0;
   out_1060307404855628995[5] = 0;
   out_1060307404855628995[6] = 0;
   out_1060307404855628995[7] = 0;
   out_1060307404855628995[8] = 0;
   out_1060307404855628995[9] = 0;
   out_1060307404855628995[10] = 1;
   out_1060307404855628995[11] = 0;
   out_1060307404855628995[12] = 0;
   out_1060307404855628995[13] = 1;
   out_1060307404855628995[14] = 0;
   out_1060307404855628995[15] = 0;
   out_1060307404855628995[16] = 0;
   out_1060307404855628995[17] = 0;
   out_1060307404855628995[18] = 0;
   out_1060307404855628995[19] = 0;
   out_1060307404855628995[20] = 0;
   out_1060307404855628995[21] = 0;
   out_1060307404855628995[22] = 0;
   out_1060307404855628995[23] = 0;
   out_1060307404855628995[24] = 0;
   out_1060307404855628995[25] = 0;
   out_1060307404855628995[26] = 0;
   out_1060307404855628995[27] = 0;
   out_1060307404855628995[28] = 0;
   out_1060307404855628995[29] = 0;
   out_1060307404855628995[30] = 0;
   out_1060307404855628995[31] = 0;
   out_1060307404855628995[32] = 0;
   out_1060307404855628995[33] = 1;
   out_1060307404855628995[34] = 0;
   out_1060307404855628995[35] = 0;
   out_1060307404855628995[36] = 1;
   out_1060307404855628995[37] = 0;
   out_1060307404855628995[38] = 0;
   out_1060307404855628995[39] = 0;
   out_1060307404855628995[40] = 0;
   out_1060307404855628995[41] = 0;
   out_1060307404855628995[42] = 0;
   out_1060307404855628995[43] = 0;
   out_1060307404855628995[44] = 0;
   out_1060307404855628995[45] = 0;
   out_1060307404855628995[46] = 0;
   out_1060307404855628995[47] = 0;
   out_1060307404855628995[48] = 0;
   out_1060307404855628995[49] = 0;
   out_1060307404855628995[50] = 0;
   out_1060307404855628995[51] = 0;
   out_1060307404855628995[52] = 0;
   out_1060307404855628995[53] = 0;
   out_1060307404855628995[54] = 0;
   out_1060307404855628995[55] = 0;
   out_1060307404855628995[56] = 1;
   out_1060307404855628995[57] = 0;
   out_1060307404855628995[58] = 0;
   out_1060307404855628995[59] = 1;
   out_1060307404855628995[60] = 0;
   out_1060307404855628995[61] = 0;
   out_1060307404855628995[62] = 0;
   out_1060307404855628995[63] = 0;
   out_1060307404855628995[64] = 0;
   out_1060307404855628995[65] = 0;
}
void h_9(double *state, double *unused, double *out_5955690056654132601) {
   out_5955690056654132601[0] = state[10];
   out_5955690056654132601[1] = state[11];
   out_5955690056654132601[2] = state[12];
}
void H_9(double *state, double *unused, double *out_819117758226038350) {
   out_819117758226038350[0] = 0;
   out_819117758226038350[1] = 0;
   out_819117758226038350[2] = 0;
   out_819117758226038350[3] = 0;
   out_819117758226038350[4] = 0;
   out_819117758226038350[5] = 0;
   out_819117758226038350[6] = 0;
   out_819117758226038350[7] = 0;
   out_819117758226038350[8] = 0;
   out_819117758226038350[9] = 0;
   out_819117758226038350[10] = 1;
   out_819117758226038350[11] = 0;
   out_819117758226038350[12] = 0;
   out_819117758226038350[13] = 0;
   out_819117758226038350[14] = 0;
   out_819117758226038350[15] = 0;
   out_819117758226038350[16] = 0;
   out_819117758226038350[17] = 0;
   out_819117758226038350[18] = 0;
   out_819117758226038350[19] = 0;
   out_819117758226038350[20] = 0;
   out_819117758226038350[21] = 0;
   out_819117758226038350[22] = 0;
   out_819117758226038350[23] = 0;
   out_819117758226038350[24] = 0;
   out_819117758226038350[25] = 0;
   out_819117758226038350[26] = 0;
   out_819117758226038350[27] = 0;
   out_819117758226038350[28] = 0;
   out_819117758226038350[29] = 0;
   out_819117758226038350[30] = 0;
   out_819117758226038350[31] = 0;
   out_819117758226038350[32] = 0;
   out_819117758226038350[33] = 1;
   out_819117758226038350[34] = 0;
   out_819117758226038350[35] = 0;
   out_819117758226038350[36] = 0;
   out_819117758226038350[37] = 0;
   out_819117758226038350[38] = 0;
   out_819117758226038350[39] = 0;
   out_819117758226038350[40] = 0;
   out_819117758226038350[41] = 0;
   out_819117758226038350[42] = 0;
   out_819117758226038350[43] = 0;
   out_819117758226038350[44] = 0;
   out_819117758226038350[45] = 0;
   out_819117758226038350[46] = 0;
   out_819117758226038350[47] = 0;
   out_819117758226038350[48] = 0;
   out_819117758226038350[49] = 0;
   out_819117758226038350[50] = 0;
   out_819117758226038350[51] = 0;
   out_819117758226038350[52] = 0;
   out_819117758226038350[53] = 0;
   out_819117758226038350[54] = 0;
   out_819117758226038350[55] = 0;
   out_819117758226038350[56] = 1;
   out_819117758226038350[57] = 0;
   out_819117758226038350[58] = 0;
   out_819117758226038350[59] = 0;
   out_819117758226038350[60] = 0;
   out_819117758226038350[61] = 0;
   out_819117758226038350[62] = 0;
   out_819117758226038350[63] = 0;
   out_819117758226038350[64] = 0;
   out_819117758226038350[65] = 0;
}
void h_10(double *state, double *unused, double *out_6748260789248896796) {
   out_6748260789248896796[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6748260789248896796[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6748260789248896796[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6747811974431363251) {
   out_6747811974431363251[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6747811974431363251[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6747811974431363251[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6747811974431363251[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6747811974431363251[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6747811974431363251[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6747811974431363251[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6747811974431363251[7] = 0;
   out_6747811974431363251[8] = 0;
   out_6747811974431363251[9] = 0;
   out_6747811974431363251[10] = 0;
   out_6747811974431363251[11] = 0;
   out_6747811974431363251[12] = 0;
   out_6747811974431363251[13] = 0;
   out_6747811974431363251[14] = 0;
   out_6747811974431363251[15] = 0;
   out_6747811974431363251[16] = 1;
   out_6747811974431363251[17] = 0;
   out_6747811974431363251[18] = 0;
   out_6747811974431363251[19] = 1;
   out_6747811974431363251[20] = 0;
   out_6747811974431363251[21] = 0;
   out_6747811974431363251[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6747811974431363251[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6747811974431363251[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6747811974431363251[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6747811974431363251[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6747811974431363251[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6747811974431363251[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6747811974431363251[29] = 0;
   out_6747811974431363251[30] = 0;
   out_6747811974431363251[31] = 0;
   out_6747811974431363251[32] = 0;
   out_6747811974431363251[33] = 0;
   out_6747811974431363251[34] = 0;
   out_6747811974431363251[35] = 0;
   out_6747811974431363251[36] = 0;
   out_6747811974431363251[37] = 0;
   out_6747811974431363251[38] = 0;
   out_6747811974431363251[39] = 1;
   out_6747811974431363251[40] = 0;
   out_6747811974431363251[41] = 0;
   out_6747811974431363251[42] = 1;
   out_6747811974431363251[43] = 0;
   out_6747811974431363251[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6747811974431363251[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6747811974431363251[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6747811974431363251[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6747811974431363251[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6747811974431363251[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6747811974431363251[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6747811974431363251[51] = 0;
   out_6747811974431363251[52] = 0;
   out_6747811974431363251[53] = 0;
   out_6747811974431363251[54] = 0;
   out_6747811974431363251[55] = 0;
   out_6747811974431363251[56] = 0;
   out_6747811974431363251[57] = 0;
   out_6747811974431363251[58] = 0;
   out_6747811974431363251[59] = 0;
   out_6747811974431363251[60] = 0;
   out_6747811974431363251[61] = 0;
   out_6747811974431363251[62] = 1;
   out_6747811974431363251[63] = 0;
   out_6747811974431363251[64] = 0;
   out_6747811974431363251[65] = 1;
}
void h_12(double *state, double *unused, double *out_6103274577744846967) {
   out_6103274577744846967[0] = state[0];
   out_6103274577744846967[1] = state[1];
   out_6103274577744846967[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3959149003176332800) {
   out_3959149003176332800[0] = 1;
   out_3959149003176332800[1] = 0;
   out_3959149003176332800[2] = 0;
   out_3959149003176332800[3] = 0;
   out_3959149003176332800[4] = 0;
   out_3959149003176332800[5] = 0;
   out_3959149003176332800[6] = 0;
   out_3959149003176332800[7] = 0;
   out_3959149003176332800[8] = 0;
   out_3959149003176332800[9] = 0;
   out_3959149003176332800[10] = 0;
   out_3959149003176332800[11] = 0;
   out_3959149003176332800[12] = 0;
   out_3959149003176332800[13] = 0;
   out_3959149003176332800[14] = 0;
   out_3959149003176332800[15] = 0;
   out_3959149003176332800[16] = 0;
   out_3959149003176332800[17] = 0;
   out_3959149003176332800[18] = 0;
   out_3959149003176332800[19] = 0;
   out_3959149003176332800[20] = 0;
   out_3959149003176332800[21] = 0;
   out_3959149003176332800[22] = 0;
   out_3959149003176332800[23] = 1;
   out_3959149003176332800[24] = 0;
   out_3959149003176332800[25] = 0;
   out_3959149003176332800[26] = 0;
   out_3959149003176332800[27] = 0;
   out_3959149003176332800[28] = 0;
   out_3959149003176332800[29] = 0;
   out_3959149003176332800[30] = 0;
   out_3959149003176332800[31] = 0;
   out_3959149003176332800[32] = 0;
   out_3959149003176332800[33] = 0;
   out_3959149003176332800[34] = 0;
   out_3959149003176332800[35] = 0;
   out_3959149003176332800[36] = 0;
   out_3959149003176332800[37] = 0;
   out_3959149003176332800[38] = 0;
   out_3959149003176332800[39] = 0;
   out_3959149003176332800[40] = 0;
   out_3959149003176332800[41] = 0;
   out_3959149003176332800[42] = 0;
   out_3959149003176332800[43] = 0;
   out_3959149003176332800[44] = 0;
   out_3959149003176332800[45] = 0;
   out_3959149003176332800[46] = 1;
   out_3959149003176332800[47] = 0;
   out_3959149003176332800[48] = 0;
   out_3959149003176332800[49] = 0;
   out_3959149003176332800[50] = 0;
   out_3959149003176332800[51] = 0;
   out_3959149003176332800[52] = 0;
   out_3959149003176332800[53] = 0;
   out_3959149003176332800[54] = 0;
   out_3959149003176332800[55] = 0;
   out_3959149003176332800[56] = 0;
   out_3959149003176332800[57] = 0;
   out_3959149003176332800[58] = 0;
   out_3959149003176332800[59] = 0;
   out_3959149003176332800[60] = 0;
   out_3959149003176332800[61] = 0;
   out_3959149003176332800[62] = 0;
   out_3959149003176332800[63] = 0;
   out_3959149003176332800[64] = 0;
   out_3959149003176332800[65] = 0;
}
void h_35(double *state, double *unused, double *out_312039740995566217) {
   out_312039740995566217[0] = state[7];
   out_312039740995566217[1] = state[8];
   out_312039740995566217[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6704712035501346509) {
   out_6704712035501346509[0] = 0;
   out_6704712035501346509[1] = 0;
   out_6704712035501346509[2] = 0;
   out_6704712035501346509[3] = 0;
   out_6704712035501346509[4] = 0;
   out_6704712035501346509[5] = 0;
   out_6704712035501346509[6] = 0;
   out_6704712035501346509[7] = 1;
   out_6704712035501346509[8] = 0;
   out_6704712035501346509[9] = 0;
   out_6704712035501346509[10] = 0;
   out_6704712035501346509[11] = 0;
   out_6704712035501346509[12] = 0;
   out_6704712035501346509[13] = 0;
   out_6704712035501346509[14] = 0;
   out_6704712035501346509[15] = 0;
   out_6704712035501346509[16] = 0;
   out_6704712035501346509[17] = 0;
   out_6704712035501346509[18] = 0;
   out_6704712035501346509[19] = 0;
   out_6704712035501346509[20] = 0;
   out_6704712035501346509[21] = 0;
   out_6704712035501346509[22] = 0;
   out_6704712035501346509[23] = 0;
   out_6704712035501346509[24] = 0;
   out_6704712035501346509[25] = 0;
   out_6704712035501346509[26] = 0;
   out_6704712035501346509[27] = 0;
   out_6704712035501346509[28] = 0;
   out_6704712035501346509[29] = 0;
   out_6704712035501346509[30] = 1;
   out_6704712035501346509[31] = 0;
   out_6704712035501346509[32] = 0;
   out_6704712035501346509[33] = 0;
   out_6704712035501346509[34] = 0;
   out_6704712035501346509[35] = 0;
   out_6704712035501346509[36] = 0;
   out_6704712035501346509[37] = 0;
   out_6704712035501346509[38] = 0;
   out_6704712035501346509[39] = 0;
   out_6704712035501346509[40] = 0;
   out_6704712035501346509[41] = 0;
   out_6704712035501346509[42] = 0;
   out_6704712035501346509[43] = 0;
   out_6704712035501346509[44] = 0;
   out_6704712035501346509[45] = 0;
   out_6704712035501346509[46] = 0;
   out_6704712035501346509[47] = 0;
   out_6704712035501346509[48] = 0;
   out_6704712035501346509[49] = 0;
   out_6704712035501346509[50] = 0;
   out_6704712035501346509[51] = 0;
   out_6704712035501346509[52] = 0;
   out_6704712035501346509[53] = 1;
   out_6704712035501346509[54] = 0;
   out_6704712035501346509[55] = 0;
   out_6704712035501346509[56] = 0;
   out_6704712035501346509[57] = 0;
   out_6704712035501346509[58] = 0;
   out_6704712035501346509[59] = 0;
   out_6704712035501346509[60] = 0;
   out_6704712035501346509[61] = 0;
   out_6704712035501346509[62] = 0;
   out_6704712035501346509[63] = 0;
   out_6704712035501346509[64] = 0;
   out_6704712035501346509[65] = 0;
}
void h_32(double *state, double *unused, double *out_7214231673700524842) {
   out_7214231673700524842[0] = state[3];
   out_7214231673700524842[1] = state[4];
   out_7214231673700524842[2] = state[5];
   out_7214231673700524842[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5940727666000592549) {
   out_5940727666000592549[0] = 0;
   out_5940727666000592549[1] = 0;
   out_5940727666000592549[2] = 0;
   out_5940727666000592549[3] = 1;
   out_5940727666000592549[4] = 0;
   out_5940727666000592549[5] = 0;
   out_5940727666000592549[6] = 0;
   out_5940727666000592549[7] = 0;
   out_5940727666000592549[8] = 0;
   out_5940727666000592549[9] = 0;
   out_5940727666000592549[10] = 0;
   out_5940727666000592549[11] = 0;
   out_5940727666000592549[12] = 0;
   out_5940727666000592549[13] = 0;
   out_5940727666000592549[14] = 0;
   out_5940727666000592549[15] = 0;
   out_5940727666000592549[16] = 0;
   out_5940727666000592549[17] = 0;
   out_5940727666000592549[18] = 0;
   out_5940727666000592549[19] = 0;
   out_5940727666000592549[20] = 0;
   out_5940727666000592549[21] = 0;
   out_5940727666000592549[22] = 0;
   out_5940727666000592549[23] = 0;
   out_5940727666000592549[24] = 0;
   out_5940727666000592549[25] = 0;
   out_5940727666000592549[26] = 1;
   out_5940727666000592549[27] = 0;
   out_5940727666000592549[28] = 0;
   out_5940727666000592549[29] = 0;
   out_5940727666000592549[30] = 0;
   out_5940727666000592549[31] = 0;
   out_5940727666000592549[32] = 0;
   out_5940727666000592549[33] = 0;
   out_5940727666000592549[34] = 0;
   out_5940727666000592549[35] = 0;
   out_5940727666000592549[36] = 0;
   out_5940727666000592549[37] = 0;
   out_5940727666000592549[38] = 0;
   out_5940727666000592549[39] = 0;
   out_5940727666000592549[40] = 0;
   out_5940727666000592549[41] = 0;
   out_5940727666000592549[42] = 0;
   out_5940727666000592549[43] = 0;
   out_5940727666000592549[44] = 0;
   out_5940727666000592549[45] = 0;
   out_5940727666000592549[46] = 0;
   out_5940727666000592549[47] = 0;
   out_5940727666000592549[48] = 0;
   out_5940727666000592549[49] = 1;
   out_5940727666000592549[50] = 0;
   out_5940727666000592549[51] = 0;
   out_5940727666000592549[52] = 0;
   out_5940727666000592549[53] = 0;
   out_5940727666000592549[54] = 0;
   out_5940727666000592549[55] = 0;
   out_5940727666000592549[56] = 0;
   out_5940727666000592549[57] = 0;
   out_5940727666000592549[58] = 0;
   out_5940727666000592549[59] = 0;
   out_5940727666000592549[60] = 0;
   out_5940727666000592549[61] = 0;
   out_5940727666000592549[62] = 0;
   out_5940727666000592549[63] = 0;
   out_5940727666000592549[64] = 0;
   out_5940727666000592549[65] = 0;
   out_5940727666000592549[66] = 0;
   out_5940727666000592549[67] = 0;
   out_5940727666000592549[68] = 0;
   out_5940727666000592549[69] = 0;
   out_5940727666000592549[70] = 0;
   out_5940727666000592549[71] = 0;
   out_5940727666000592549[72] = 1;
   out_5940727666000592549[73] = 0;
   out_5940727666000592549[74] = 0;
   out_5940727666000592549[75] = 0;
   out_5940727666000592549[76] = 0;
   out_5940727666000592549[77] = 0;
   out_5940727666000592549[78] = 0;
   out_5940727666000592549[79] = 0;
   out_5940727666000592549[80] = 0;
   out_5940727666000592549[81] = 0;
   out_5940727666000592549[82] = 0;
   out_5940727666000592549[83] = 0;
   out_5940727666000592549[84] = 0;
   out_5940727666000592549[85] = 0;
   out_5940727666000592549[86] = 0;
   out_5940727666000592549[87] = 0;
}
void h_13(double *state, double *unused, double *out_1768116978492445216) {
   out_1768116978492445216[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1768116978492445216[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1768116978492445216[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2823756408362652077) {
   out_2823756408362652077[0] = 0;
   out_2823756408362652077[1] = 0;
   out_2823756408362652077[2] = 0;
   out_2823756408362652077[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2823756408362652077[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2823756408362652077[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2823756408362652077[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2823756408362652077[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2823756408362652077[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2823756408362652077[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2823756408362652077[10] = 0;
   out_2823756408362652077[11] = 0;
   out_2823756408362652077[12] = 0;
   out_2823756408362652077[13] = 0;
   out_2823756408362652077[14] = 0;
   out_2823756408362652077[15] = 0;
   out_2823756408362652077[16] = 0;
   out_2823756408362652077[17] = 0;
   out_2823756408362652077[18] = 0;
   out_2823756408362652077[19] = 0;
   out_2823756408362652077[20] = 0;
   out_2823756408362652077[21] = 0;
   out_2823756408362652077[22] = 0;
   out_2823756408362652077[23] = 0;
   out_2823756408362652077[24] = 0;
   out_2823756408362652077[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2823756408362652077[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2823756408362652077[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2823756408362652077[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2823756408362652077[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2823756408362652077[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2823756408362652077[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2823756408362652077[32] = 0;
   out_2823756408362652077[33] = 0;
   out_2823756408362652077[34] = 0;
   out_2823756408362652077[35] = 0;
   out_2823756408362652077[36] = 0;
   out_2823756408362652077[37] = 0;
   out_2823756408362652077[38] = 0;
   out_2823756408362652077[39] = 0;
   out_2823756408362652077[40] = 0;
   out_2823756408362652077[41] = 0;
   out_2823756408362652077[42] = 0;
   out_2823756408362652077[43] = 0;
   out_2823756408362652077[44] = 0;
   out_2823756408362652077[45] = 0;
   out_2823756408362652077[46] = 0;
   out_2823756408362652077[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2823756408362652077[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2823756408362652077[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2823756408362652077[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2823756408362652077[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2823756408362652077[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2823756408362652077[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2823756408362652077[54] = 0;
   out_2823756408362652077[55] = 0;
   out_2823756408362652077[56] = 0;
   out_2823756408362652077[57] = 0;
   out_2823756408362652077[58] = 0;
   out_2823756408362652077[59] = 0;
   out_2823756408362652077[60] = 0;
   out_2823756408362652077[61] = 0;
   out_2823756408362652077[62] = 0;
   out_2823756408362652077[63] = 0;
   out_2823756408362652077[64] = 0;
   out_2823756408362652077[65] = 0;
}
void h_14(double *state, double *unused, double *out_5955690056654132601) {
   out_5955690056654132601[0] = state[10];
   out_5955690056654132601[1] = state[11];
   out_5955690056654132601[2] = state[12];
}
void H_14(double *state, double *unused, double *out_819117758226038350) {
   out_819117758226038350[0] = 0;
   out_819117758226038350[1] = 0;
   out_819117758226038350[2] = 0;
   out_819117758226038350[3] = 0;
   out_819117758226038350[4] = 0;
   out_819117758226038350[5] = 0;
   out_819117758226038350[6] = 0;
   out_819117758226038350[7] = 0;
   out_819117758226038350[8] = 0;
   out_819117758226038350[9] = 0;
   out_819117758226038350[10] = 1;
   out_819117758226038350[11] = 0;
   out_819117758226038350[12] = 0;
   out_819117758226038350[13] = 0;
   out_819117758226038350[14] = 0;
   out_819117758226038350[15] = 0;
   out_819117758226038350[16] = 0;
   out_819117758226038350[17] = 0;
   out_819117758226038350[18] = 0;
   out_819117758226038350[19] = 0;
   out_819117758226038350[20] = 0;
   out_819117758226038350[21] = 0;
   out_819117758226038350[22] = 0;
   out_819117758226038350[23] = 0;
   out_819117758226038350[24] = 0;
   out_819117758226038350[25] = 0;
   out_819117758226038350[26] = 0;
   out_819117758226038350[27] = 0;
   out_819117758226038350[28] = 0;
   out_819117758226038350[29] = 0;
   out_819117758226038350[30] = 0;
   out_819117758226038350[31] = 0;
   out_819117758226038350[32] = 0;
   out_819117758226038350[33] = 1;
   out_819117758226038350[34] = 0;
   out_819117758226038350[35] = 0;
   out_819117758226038350[36] = 0;
   out_819117758226038350[37] = 0;
   out_819117758226038350[38] = 0;
   out_819117758226038350[39] = 0;
   out_819117758226038350[40] = 0;
   out_819117758226038350[41] = 0;
   out_819117758226038350[42] = 0;
   out_819117758226038350[43] = 0;
   out_819117758226038350[44] = 0;
   out_819117758226038350[45] = 0;
   out_819117758226038350[46] = 0;
   out_819117758226038350[47] = 0;
   out_819117758226038350[48] = 0;
   out_819117758226038350[49] = 0;
   out_819117758226038350[50] = 0;
   out_819117758226038350[51] = 0;
   out_819117758226038350[52] = 0;
   out_819117758226038350[53] = 0;
   out_819117758226038350[54] = 0;
   out_819117758226038350[55] = 0;
   out_819117758226038350[56] = 1;
   out_819117758226038350[57] = 0;
   out_819117758226038350[58] = 0;
   out_819117758226038350[59] = 0;
   out_819117758226038350[60] = 0;
   out_819117758226038350[61] = 0;
   out_819117758226038350[62] = 0;
   out_819117758226038350[63] = 0;
   out_819117758226038350[64] = 0;
   out_819117758226038350[65] = 0;
}
void h_33(double *state, double *unused, double *out_6006118663079489692) {
   out_6006118663079489692[0] = state[16];
   out_6006118663079489692[1] = state[17];
   out_6006118663079489692[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8591475033569347503) {
   out_8591475033569347503[0] = 0;
   out_8591475033569347503[1] = 0;
   out_8591475033569347503[2] = 0;
   out_8591475033569347503[3] = 0;
   out_8591475033569347503[4] = 0;
   out_8591475033569347503[5] = 0;
   out_8591475033569347503[6] = 0;
   out_8591475033569347503[7] = 0;
   out_8591475033569347503[8] = 0;
   out_8591475033569347503[9] = 0;
   out_8591475033569347503[10] = 0;
   out_8591475033569347503[11] = 0;
   out_8591475033569347503[12] = 0;
   out_8591475033569347503[13] = 0;
   out_8591475033569347503[14] = 0;
   out_8591475033569347503[15] = 0;
   out_8591475033569347503[16] = 1;
   out_8591475033569347503[17] = 0;
   out_8591475033569347503[18] = 0;
   out_8591475033569347503[19] = 0;
   out_8591475033569347503[20] = 0;
   out_8591475033569347503[21] = 0;
   out_8591475033569347503[22] = 0;
   out_8591475033569347503[23] = 0;
   out_8591475033569347503[24] = 0;
   out_8591475033569347503[25] = 0;
   out_8591475033569347503[26] = 0;
   out_8591475033569347503[27] = 0;
   out_8591475033569347503[28] = 0;
   out_8591475033569347503[29] = 0;
   out_8591475033569347503[30] = 0;
   out_8591475033569347503[31] = 0;
   out_8591475033569347503[32] = 0;
   out_8591475033569347503[33] = 0;
   out_8591475033569347503[34] = 0;
   out_8591475033569347503[35] = 0;
   out_8591475033569347503[36] = 0;
   out_8591475033569347503[37] = 0;
   out_8591475033569347503[38] = 0;
   out_8591475033569347503[39] = 1;
   out_8591475033569347503[40] = 0;
   out_8591475033569347503[41] = 0;
   out_8591475033569347503[42] = 0;
   out_8591475033569347503[43] = 0;
   out_8591475033569347503[44] = 0;
   out_8591475033569347503[45] = 0;
   out_8591475033569347503[46] = 0;
   out_8591475033569347503[47] = 0;
   out_8591475033569347503[48] = 0;
   out_8591475033569347503[49] = 0;
   out_8591475033569347503[50] = 0;
   out_8591475033569347503[51] = 0;
   out_8591475033569347503[52] = 0;
   out_8591475033569347503[53] = 0;
   out_8591475033569347503[54] = 0;
   out_8591475033569347503[55] = 0;
   out_8591475033569347503[56] = 0;
   out_8591475033569347503[57] = 0;
   out_8591475033569347503[58] = 0;
   out_8591475033569347503[59] = 0;
   out_8591475033569347503[60] = 0;
   out_8591475033569347503[61] = 0;
   out_8591475033569347503[62] = 1;
   out_8591475033569347503[63] = 0;
   out_8591475033569347503[64] = 0;
   out_8591475033569347503[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_757562583052757246) {
  H(in_vec, out_757562583052757246);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3871806392276481772) {
  err_fun(nom_x, delta_x, out_3871806392276481772);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7967854238640231459) {
  inv_err_fun(nom_x, true_x, out_7967854238640231459);
}
void live_H_mod_fun(double *state, double *out_8261281829583298016) {
  H_mod_fun(state, out_8261281829583298016);
}
void live_f_fun(double *state, double dt, double *out_4896127263541326294) {
  f_fun(state,  dt, out_4896127263541326294);
}
void live_F_fun(double *state, double dt, double *out_4168231684540016827) {
  F_fun(state,  dt, out_4168231684540016827);
}
void live_h_4(double *state, double *unused, double *out_4991721715502618263) {
  h_4(state, unused, out_4991721715502618263);
}
void live_H_4(double *state, double *unused, double *out_1060307404855628995) {
  H_4(state, unused, out_1060307404855628995);
}
void live_h_9(double *state, double *unused, double *out_5955690056654132601) {
  h_9(state, unused, out_5955690056654132601);
}
void live_H_9(double *state, double *unused, double *out_819117758226038350) {
  H_9(state, unused, out_819117758226038350);
}
void live_h_10(double *state, double *unused, double *out_6748260789248896796) {
  h_10(state, unused, out_6748260789248896796);
}
void live_H_10(double *state, double *unused, double *out_6747811974431363251) {
  H_10(state, unused, out_6747811974431363251);
}
void live_h_12(double *state, double *unused, double *out_6103274577744846967) {
  h_12(state, unused, out_6103274577744846967);
}
void live_H_12(double *state, double *unused, double *out_3959149003176332800) {
  H_12(state, unused, out_3959149003176332800);
}
void live_h_35(double *state, double *unused, double *out_312039740995566217) {
  h_35(state, unused, out_312039740995566217);
}
void live_H_35(double *state, double *unused, double *out_6704712035501346509) {
  H_35(state, unused, out_6704712035501346509);
}
void live_h_32(double *state, double *unused, double *out_7214231673700524842) {
  h_32(state, unused, out_7214231673700524842);
}
void live_H_32(double *state, double *unused, double *out_5940727666000592549) {
  H_32(state, unused, out_5940727666000592549);
}
void live_h_13(double *state, double *unused, double *out_1768116978492445216) {
  h_13(state, unused, out_1768116978492445216);
}
void live_H_13(double *state, double *unused, double *out_2823756408362652077) {
  H_13(state, unused, out_2823756408362652077);
}
void live_h_14(double *state, double *unused, double *out_5955690056654132601) {
  h_14(state, unused, out_5955690056654132601);
}
void live_H_14(double *state, double *unused, double *out_819117758226038350) {
  H_14(state, unused, out_819117758226038350);
}
void live_h_33(double *state, double *unused, double *out_6006118663079489692) {
  h_33(state, unused, out_6006118663079489692);
}
void live_H_33(double *state, double *unused, double *out_8591475033569347503) {
  H_33(state, unused, out_8591475033569347503);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
